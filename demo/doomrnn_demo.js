/*
===
Doom-RNN demo using deeplearn.js and p5
===
*/
var doombrain_r130=[-100,-133,-96,-76,46,-6,64,-12,76,-41,-26,63,90,121,43,21,-55,-19,10,91,75,32,148,-54,-9,191,61,-45,-46,43,55,-42,-95,118,-78,-27,-161,25,142,-33,-55,65,20,-92,49,59,-10,58,-28,159,170,-45,151,-82,-29,-124,122,21,-96,23,-2,-6,29,-101,-1,22,-52,-24,66,-98,110,-21,14,5,-226,33,-65,17,-46,-78,125,55,32,-22,-74,122,-150,158,21,72,-21,34,-17,-67,50,143,155,-17,-86,-35,66,91,209,39,-5,147,74,-26,-130,-92,10,8,23,20,124,-14,-73,59,56,-109,-79,19,81,105,-8,-48,30,34,-30,237,156,-38,-88,-120,-45,-241,-60,104,83,31,-81,-33,236,54,-82,32,-104,57,-62,-147,-49,104,205,-7,50,0,-58,-19,74,-2,-78,-37,-17,-34,-85,58,-51,-69,-22,-69,-3,-62,-70,-66,-74,-13,26,149,87,-63,55,70,16,-54,30,-102,13,-32,-7,-145,48,0,-8,103,-20,50,-163,-5,-49,-10,27,124,-69,44,137,-67,8,-7,-13,-127,-9,11,-3,17,-93,-90,-66,151,-38,-3,12,-77,-15,54,-18,-129,-62,66,2,-14,38,155,-33,17,47,-227,-185,78,-3,-134,27,135,78,11,0,-44,-80,52,144,52,-47,-29,101,-174,-18,24,-258,-54,-6,24,-80,84,133,3,-26,-53,178,-151,22,133,67,28,-6,-30,-58,39,10,-63,-28,-77,-27,22,-32,-224,-8,-126,68,143,-9,3,81,-166,-123,134,-30,88,-84,152,-13,-38,-67,-73,49,39,72,-123,-32,115,-48,2,-70,135,105,-51,37,2,75,7,-49,-15,98,23,-28,-26,-27,-24,61,18,-52,0,-3,-71,124,78,-180,-23,-6,31,5,59,121,10,104,167,84,-88,-35,-109,75,-17,177,-7,-14,-57,91,-4,25,-38,158,-94,-58,-54,-75,-27,-5,27,35,13,-107,195,79,32,-27,-245,-189,-128,-63,-37,102,-26,-60,76,151,24,-97,9,140,27,-17,36,-47,-9,-7,-97,-94,-176,19,-73,-76,92,-18,-60,-123,130,98,-102,11,128,95,-48,-35,-77,59,-20,89,70,-151,93,1,92,18,-10,37,73,55,70,-50,-225,139,38,19,-110,-138,-98,-5,4,-170,106,-4,36,-139,110,-13,194,56,159,-111,80,172,-140,-87,45,-54,-128,-152,83,119,36,81,-29,76,-44,-68,-4,-188,93,168,-116,-31,-44,78,-49,261,-69,58,-9,3,-3,36,70,7,-84,4,20,20,-11,-63,-88,-81,-6,-66,90,-18,-88,-97,-74,31,51,10,62,-43,22,-46,-61,12,-73,31,-36,-108,39,26,-117,-17,20,-57,-38,105,-85,-30,21,83,-10,156,-29,84,1,-5,104,-31,-8,23,11,103,-46,-42,-27,2,44,-201,-26,-104,-69,45,103,-62,100,118,-44,-26,42,56,-13,56,65,4,115,40,145,28,78,-119,16,-78,128,-3,-98,-25,16,-58,194,152,-82,-83,-120,124,54,12,-86,35,-174,38,2,-87,59,58,111,-32,25,-7,24,21,26,48,-116,95,-76,-27,-239,44,117,7,-47,86,38,-78,-37,-52,93,-154,138,135,-17,92,-88,-107,-86,-111,82,-162,-137,61,-7,8,97,11,95,-171,144,7,-33,36,-101,-1,93,-22,50,171,-122,76,-181,33,-30,-162,144,153,89,-1,-110,139,-109,187,-59,-42,-66,-79,-60,-49,74,118,59,-125,162,146,72,26,-77,68,42,28,13,58,75,33,-62,-217,99,-57,119,-80,-89,72,44,-35,-62,148,51,-59,42,-71,139,-104,-65,-16,-183,168,69,45,-60,109,6,-99,-22,-61,-114,73,-51,-7,-13,-32,-29,117,-11,68,100,-46,-64,-32,79,68,6,-75,-19,10,-91,161,31,-25,-108,-24,-22,-57,-36,-49,136,-30,-154,-69,-19,124,-22,-114,101,118,-82,38,-116,-55,-26,89,-40,9,-59,-26,-12,-61,-22,57,-15,27,77,3,-63,30,47,134,-107,37,-29,-8,-30,-65,22,105,113,70,37,60,-17,119,85,-66,-22,30,-35,71,-14,63,27,44,-82,4,30,-40,-40,-58,240,-35,-94,-183,29,-212,-32,162,17,-84,-18,-58,-129,-1,-77,58,8,71,-78,-17,0,-72,-85,-21,68,106,-115,67,-43,-69,-165,-1,-58,-8,-26,87,-70,-23,-1,-113,17,-21,34,26,14,108,76,9,79,-115,-2,44,15,-27,14,-10,34,27,-37,-53,-24,-141,-167,60,65,66,72,-178,-5,-8,92,12,-84,84,42,66,-49,-129,-225,104,-61,5,-47,-18,-104,215,55,-142,-35,-20,6,44,-18,-109,28,-25,85,-3,-38,42,-162,6,18,186,4,-114,37,42,12,0,-77,88,57,-85,-79,-132,-81,34,0,-48,45,23,-18,140,36,91,-113,52,-139,-161,70,-90,26,91,54,52,105,-15,-76,-15,6,19,-262,54,63,64,-45,110,35,-49,-52,-39,-154,2,-84,-34,11,-68,-50,42,15,47,-171,15,55,158,-43,-60,48,9,61,69,80,-41,30,184,-36,-41,129,-43,-44,63,-87,76,-173,41,43,122,53,0,31,-73,69,-38,-11,-107,38,-35,-12,52,1,-82,28,28,53,-37,241,132,-79,-150,-57,-74,-81,-50,-5,74,7,41,-170,159,-15,-46,131,-11,142,-58,60,-34,72,11,157,-28,129,100,-125,-61,93,-62,-62,36,-125,111,90,66,-41,-59,-140,30,9,246,-57,2,10,-14,-62,117,-80,-43,-20,-12,59,-4,-27,141,187,6,-128,-112,31,-18,-98,45,-181,272,-8,-65,73,-44,0,-122,58,98,76,41,-64,97,120,7,150,-152,-82,4,-20];
var doombrain_t115=[56,-76,-4,89,130,13,2,3,128,31,-26,16,253,-64,45,1,-66,100,-139,22,-50,-41,-75,-42,63,53,23,66,-107,-14,22,-105,36,-101,-135,-32,-28,35,-15,-155,85,20,13,38,49,49,90,94,-5,-4,-43,11,0,-10,41,0,-42,7,-70,-9,12,-132,15,84,58,-165,115,34,-63,-55,85,-146,77,87,22,21,33,52,-54,63,95,91,-74,-190,7,43,83,45,57,131,-36,-158,-26,29,106,-72,-115,-15,-65,15,55,-45,123,-62,-117,-14,21,51,-4,-183,87,10,-123,130,99,19,34,-30,79,-17,63,30,-35,-45,-56,-56,33,62,-27,-53,4,-85,-6,66,-51,114,-5,33,105,31,-77,-39,-39,-75,64,141,3,7,-8,-155,-28,-123,1,-75,44,-52,120,7,7,-93,-64,77,-25,-76,-68,-22,-41,92,-2,-8,-38,125,23,-19,12,40,58,71,136,109,-160,76,-25,-51,120,-70,82,-10,-24,-10,-51,-71,-77,-108,101,105,-35,-64,-64,-73,164,-18,-200,-146,-67,91,-166,-75,21,-26,24,89,10,-16,-86,6,-24,4,112,143,93,11,-77,78,15,5,-147,54,28,154,134,103,46,-112,-138,-37,-69,-11,17,-69,14,84,7,-53,60,-35,22,38,-32,4,131,-23,-85,-24,87,13,29,-64,13,-67,34,15,66,81,-99,78,-142,43,-29,-89,81,17,-74,52,-126,10,-3,62,-141,-78,35,29,-85,-22,-76,-83,51,93,-68,-65,28,74,-139,81,-35,-142,2,60,-81,-40,94,28,21,28,121,-126,0,-121,-133,227,-163,-46,-15,-15,47,-11,95,-28,70,11,-31,47,21,-13,-9,1,-9,-49,-138,29,63,-17,101,-54,75,7,55,1,5,33,8,20,53,-23,-19,-104,-56,-33,-50,109,36,12,-79,70,123,57,-61,75,-86,14,-129,122,98,-8,-60,55,-13,55,-72,-4,-75,25,-41,43,-67,46,5,83,-102,76,-35,54,-26,-15,-56,9,105,-29,-39,183,30,12,-153,65,-23,102,31,-75,14,94,132,107,218,19,-67,-88,-111,95,61,30,-59,22,42,-26,54,109,-79,-6,-14,-23,-16,0,-18,-95,100,-91,12,-31,27,54,-119,-70,-35,70,-88,-56,-5,-25,46,66,2,138,58,4,-14,-18,-36,-10,-4,95,39,76,79,114,-24,-14,121,-38,-122,57,120,-123,55,100,-54,5,162,-113,43,-7,1,-79,87,105,14,60,-70,33,27,20,34,-97,60,49,-61,-114,99,-53,-34,-14,0,18,60,-3,-50,-39,-28,-14,141,41,71,-158,63,21,-30,59,125,29,-36,-85,55,5,-52,69,-86,-6,-71,71,1,-32,93,-114,96,72,-61,193,-34,27,-111,15,57,-83,11,-39,-25,18,20,-3,-85,91,-19,80,-110,-17,102,28,-101,-28,40,0,-27,58,-115,80,-115,128,-72,31,22,-89,-3,-45,36,42,110,-13,-28,47,-154,-176,-45,-3,141,6,83,-42,38,-31,1,-34,-78,59,74,-78,-25,26,-79,7,95,-44,46,60,-62,18,-27,55,-93,-102,-41,-168,72,-31,-67,130,-54,121,-22,-88,-91,-70,8,-14,-37,-77,44,-10,-92,-155,22,40,-65,112,-5,44,8,42,44,-176,8,-46,-59,-39,-130,-124,23,-115,-33,147,-41,-107,38,1,-16,45,36,-29,67,80,-61,-8,-76,-49,-33,-52,-97,31,48,30,-18,-22,-102,-12,19,42,91,34,18,-10,122,-21,-39,9,107,-1,-135,40,35,-18,-83,-64,-44,20,-57,-34,4,-122,-73,-56,23,143,-240,109,-54,31,-144,2,32,112,33,38,96,86,-16,72,0,110,-36,91,25,56,-10,-81,21,142,-49,-3,8,73,-27,46,-25,62,-59,4,-22,-65,-60,47,-87,52,-103,-99,0,13,126,-24,66,-4,-14,24,-122,62,91,10,7,16,-11,13,84,16,-48,88,-91,76,-137,-42,-42,132,56,15,130,105,-19,-86,-24,-45,73,-52,66,42,41,-36,-42,-49,9,45,-184,-82,9,-148,90,126,32,-6,-117,65,103,74,-16,65,-55,63,-99,66,16,18,-25,-63,-29,75,-4,-21,-134,85,-99,-62,-1,116,129,-112,-102,-71,-32,22,129,93,-18,54,38,6,-11,71,83,-54,31,1,61,157,-37,147,-88,60,90,62,13,-36,15,-2,-201,92,-108,110,-72,-82,85,58,33,-2,27,85,44,-51,-107,-71,-44,17,40,-104,-147,23,-44,112,-44,-127,0,-82,108,38,-35,15,-30,88,64,158,146,-54,38,40,-36,-8,10,24,-107,-60,-22,-9,15,83,32,5,-29,-40,38,151,57,5,23,-110,-47,106,47,15,54,74,-49,-94,-58,1,4,3,-47,-11,-51,-20,-119,-55,-116,-160,10,-37,-91,-150,16,25,-156,69,17,39,167,76,68,-33,19,-62,-9,81,-36,126,109,41,64,157,141,-156,-11,-43,40,-20,-36,15,44,-107,-41,-16,110,108,47,-112,-19,11,79,-54,-93,-63,39,93,-91,-62,54,-41,25,-86,1,-158,-135,-23,75,2,-110,-44,110,-87,-23,148,32,-115,-70,-66,-69,-10,-60,-55,64,34,-129,-18,-65,-8,-169,-64,69,-174,131,-53,-26,189,46,-16,34,15,17,66,44,8,75,115,-25,123,-6,-162,120,16,-21,-101,102,-42,-41,-16,-77,133,53,22,263,-96,-68,-17,-72,144,-29,-164,115,-27,43,132,60,-72,-88,-64,-101,11,-121,-58,-131,46,-4,-22,62,-29,-54,105,-11,-62,72,-49,50,-72,-55,-22,140,74,52,-69,-62,120,58,-169,168,5,33,45,-79,-10,-29,-62,-13,-71,-136,37];
var doombrain_t100=[25,10,66,30,28,-14,43,-47,-40,7,-2,59,-5,-6,-37,-54,21,-15,-42,-120,-5,-39,6,76,-17,11,25,14,23,-21,-61,-24,0,-46,13,-12,-29,2,59,39,-44,-10,24,-4,39,61,-5,0,-6,-78,25,-90,1,44,19,114,6,-17,32,-6,-40,-41,-46,-12,32,13,-66,-29,-5,-8,29,43,-53,0,33,-51,-4,23,-26,-32,0,-11,-74,20,-98,-32,51,21,-12,46,-60,-10,35,-49,-1,2,-49,-30,-71,-77,-51,-4,61,-93,-14,63,34,-95,-23,-103,97,-14,-23,60,-74,1,-65,12,-5,22,34,44,-41,-14,-9,77,4,-3,-45,-2,-8,-9,22,10,-33,-51,-36,51,14,0,26,-26,13,0,10,58,0,-50,-30,13,63,26,93,106,-47,-2,27,45,-25,-61,80,-2,27,-74,18,2,24,36,-8,-28,37,-21,6,-58,3,-47,-20,-12,116,69,12,14,46,41,-25,-21,80,15,-50,-11,9,-62,5,17,36,128,34,-145,45,-27,-6,114,3,-25,-62,8,31,-48,21,-89,49,104,56,22,-59,-26,23,0,-8,-54,11,-4,-93,10,17,-27,33,59,4,-14,-39,-55,29,-61,-37,-13,26,-28,-18,4,77,-34,14,-29,-2,17,-49,-82,-36,-113,40,-28,26,-25,-27,50,-55,-65,-15,-55,-61,80,-29,-58,-1,45,-71,9,32,-49,-47,-1,33,6,-18,25,-6,-5,-12,-9,-42,29,-102,50,-50,-47,20,27,76,-20,-77,48,61,-15,-20,-41,4,16,69,75,90,-29,-57,59,110,-17,21,35,-33,39,-116,14,11,-102,-9,1,-89,48,11,96,-14,57,-11,4,-13,-4,6,4,32,-53,1,-82,29,17,65,13,44,-30,22,-41,-77,-25,52,43,31,-6,35,-58,-60,-14,24,-1,-31,11,4,-37,-58,-65,17,47,74,-7,92,74,20,-13,53,5,26,8,-64,62,53,2,-25,-1,12,-1,-27,-33,53,-13,42,38,-62,7,0,-68,27,115,4,-37,-11,72,16,-51,44,11,-58,77,1,-33,57,3,-40,74,-40,57,-66,1,-108,-24,6,-88,-13,13,14,-45,-49,45,45,39,73,-64,-92,-7,87,-5,-1,29,-32,-107,-44,-60,0,64,0,-28,-60,23,29,0,64,105,-24,-49,-38,4,7,57,-38,61,53,24,92,38,16,3,-1,40,79,-3,77,-32,89,39,29,15,58,-40,-29,-20,31,-66,-17,12,-4,6,47,-24,-11,-14,2,-60,-28,-1,-40,-53,-71,-1,41,-52,-30,79,5,-27,72,18,26,-54,33,14,20,32,22,-60,-14,-42,6,5,12,-45,84,-36,-122,16,-50,-8,-6,-9,11,68,28,-59,-18,45,81,-68,-57,-52,-61,-37,73,15,-13,69,-59,44,-88,-6,-63,-3,30,-29,12,-35,5,1,22,91,-22,-46,74,48,22,-25,20,-24,0,-1,-12,137,-40,-37,-8,-100,0,-29,-15,21,-106,35,30,48,8,88,29,7,43,0,56,-17,-14,38,0,-40,-6,-54,25,-39,15,-74,34,-12,-25,-33,-7,-136,19,-17,78,17,13,22,28,45,-12,54,-83,27,117,57,67,3,-29,-64,48,-52,-13,-41,-34,-6,13,23,-53,63,-62,-54,34,-93,24,43,48,44,-59,-18,-16,35,1,54,-71,-44,-64,-67,-119,-9,-47,42,16,-14,-77,-44,-31,22,10,-7,-31,22,0,34,-124,2,2,-17,-54,41,35,30,-69,84,-48,-40,-23,-16,22,-8,12,50,58,-120,-45,-22,2,5,22,-79,-36,-19,-22,116,16,-53,59,-52,-26,-1,-52,-12,0,25,-6,-29,7,-7,129,16,-42,-9,5,12,-50,12,-16,17,-36,-3,-65,-49,53,-26,87,-36,25,-39,36,-18,-70,16,15,32,-70,17,18,48,-81,-5,-28,71,-18,49,64,-69,-18,-67,39,-59,4,-33,53,45,72,11,-3,37,14,56,-36,53,20,18,-25,-40,-1,15,-30,34,38,35,93,10,28,66,-10,57,44,76,12,36,22,-22,19,15,20,2,-28,31,57,-28,-22,-22,-1,-82,10,-30,-21,-2,28,11,9,-38,-76,51,13,12,-17,-74,-29,2,0,32,-10,-46,-10,29,-17,2,70,-86,-50,-35,-27,21,-47,3,-10,-9,-60,87,12,-42,57,27,33,46,39,0,3,-35,-72,-27,-21,40,67,23,4,6,-35,56,8,21,-3,-34,7,-1,0,34,39,45,-55,-43,-44,32,-17,44,-5,-53,88,-10,11,42,11,14,-22,44,-11,11,10,40,-75,-54,81,65,-9,-33,-12,-64,54,22,46,57,1,66,-75,-28,24,-34,-38,-52,-35,-1,-33,-47,18,77,-29,-26,108,-7,52,-26,-21,-79,4,94,22,50,19,72,18,36,104,41,110,-1,-29,-4,19,34,-62,55,19,73,36,2,56,-13,11,44,-37,20,-145,-90,-7,21,-13,-25,-56,53,18,18,12,57,-46,16,77,40,-42,-37,-25,63,25,-31,38,60,-34,6,-8,69,38,54,115,-51,4,0,44,-77,-68,-6,19,9,-54,31,-25,13,43,65,-11,-32,-5,51,4,48,-4,-24,3,-52,-39,-68,21,-51,29,-32,21,68,55,-14,38,49,12,-50,73,55,-12,59,46,48,56,30,6,2,105,25,26,-50,-128,25,50,-71,-31,35,-6,-61,-33,19,45,-35,-2,0,-19,44,97,-12,-45,7,-36,-35,-15,7,20,26,72,-29,-94,13,3,-1,1,-35,-36,26,9,-24,-21,-7,-54,58,32,24,-20,-2,-110,-2,-25,-72,-66,33,-61,84,46,0,6,-37,-42,12,-22,-40,92,-6];

var doommrnn_demo = function(settings) {
  "use strict";
  var slider_mode = settings.slider_mode;
  var square_mode = settings.square_mode;
  var doomrnn_sketch = function( p ) { 
    "use strict";

    var div_name = settings.div_name;

    var img;
    var pic;

    var human_unicode = "🐵";
    var robot_unicode = "🤖";
    var left_arrow_unicode = "⬅️";
    var right_arrow_unicode = "➡️";
    var down_arrow_unicode = "";//"⬇️";
    var action_unicode = "";

    var key_up = 38;
    var key_down = 40;
    var key_left = 37;
    var key_right = 39;

    var screen_x = 640;
    var screen_y = 480;
    var screen_width = 640;
    var screen_height = 480;
    var temperature = settings.temperature;

    var z_size = DoomRNN.z_size;
    var rnn_size = DoomRNN.rnn_size;

    var rnn_z, rnn_c, rnn_h, rnn_restart, rnn_action, rnn_logrestart, rnn_next_state;

    var score = 0;

    var human_override = false;
    var human_action = 0;

    // dom
    var canvas;
    var temperature_slider;
    var temperature_slider_min = 50;
    var temperature_slider_max = 300;
    var temperature_text_show = false;

    if (settings.temperature_slider_max) {
      temperature_slider_max = settings.temperature_slider_max;
    }

    var rect;
    var origx, origy;

    var first_frame = true;

    // agent
    var agent_brain=settings.agent_brain;
    agent_brain = DoomRNN.dequantize(agent_brain, 100);

    function pic2img(pic) {
      var i, j;
      var img = p.createImage(64, 64);
      img.loadPixels();
      var N = 64;
      var k = 0;
      var m;
      for (i = 0; i < N; i++) {
        for (j = 0; j < N; j++) {
          m = i*N+j;
          img.pixels[4*m] = pic[k]*255;
          img.pixels[4*m+1] = pic[k+1]*255;
          img.pixels[4*m+2] = pic[k+2]*255;
          img.pixels[4*m+3] = 255;
          k += 3;
        }
      }
      img.updatePixels();
      return img;
    }

    function draw_image() {
      pic = DoomRNN.vae_decode(rnn_z);
      img = pic2img(pic);
      //img.resize(screen_x, screen_y);
      img.resizeNN(screen_x, screen_y);
      p.image(img, 0, 0);
    }

    function restart_game_state() {
      score = 0;
      rnn_z = DoomRNN.init_random_z();
      rnn_c = DoomRNN.init_rnn_state();
      rnn_h = DoomRNN.init_rnn_state();
      rnn_restart = 1;
      rnn_action = DoomRNN.get_action(rnn_z, rnn_c, rnn_h, agent_brain);
      human_override = false;
    }

    var temperature_slider_event = function() {
      temperature_text_show = true;
      var val = temperature_slider.value() / 100;
      temperature = val;
    }

    function set_screen() {
      // make dom
      var bodyRect = document.body.getBoundingClientRect()
      rect = window.document.getElementById(div_name).getBoundingClientRect();
      origy = rect.top - bodyRect.top;
      origx = rect.left - bodyRect.left;
      //screen_x = Math.max(window.innerWidth, 320);
      screen_width = Math.max(window.document.getElementById(div_name).parentElement.clientWidth, 320);
      screen_height = Math.max(window.document.getElementById(div_name).parentElement.clientHeight, 320);
      if (square_mode) {
        screen_x = Math.min(screen_width, screen_height);
        screen_y = screen_x;
      } else {
        // rect mode
        var slack = 0;
        if (settings.cover_mode) {
          slack = 0; // set to 70 if a bar is on the top.
        }
        screen_x = Math.max(window.document.getElementById(div_name).parentElement.clientWidth, 320);
        screen_y = Math.min(window.innerHeight-slack, screen_x);
      }

    }

    p.setup = function() {

      WorldController.checkFirstFrameRendered();

      set_screen();

      // game stuff
      restart_game_state();

      canvas = p.createCanvas(screen_x, screen_y);

      // dom
      if (slider_mode) {
        temperature_slider = p.createSlider(temperature_slider_min, temperature_slider_max, temperature*100);
        temperature_slider.input(temperature_slider_event)
      }

      reset_screen();

      draw_image();

      p.frameRate(30);

      p.noStroke();
      p.fill(192);

    }

    function reset_screen() {
      set_screen();
      p.resizeCanvas(screen_x, screen_y);
      //canvas.position(origx, origy);
      if (slider_mode) {
        temperature_slider.position(screen_x*3/4+origx, origy+screen_y-20);
        temperature_slider.style('width', screen_x*1/4-10+'px');
      }
    }

    p.windowResized = function() {
      reset_screen();
    }

    function action_to_text(action) {
      var result = "stay";
      if (action < -0.333) {
        result = "left";
      }
      if (action > 0.333) {
        result = "right";
      }
      return result;
    }

    function action_to_unicode(action) {
      var result = down_arrow_unicode;
      if (action < -0.333) {
        result = left_arrow_unicode;
      }
      if (action > 0.333) {
        result = right_arrow_unicode;
      }
      return result;
    }

    function update_descriptions() {
      p.textSize(15);
      if (!settings.cover_mode) {
        p.text(score+1, 8, 20);
      }
      if (temperature_text_show) {
        p.text("𝜏 = "+temperature, screen_x*3/4+4, screen_y-25);
      }
      p.textSize(35);
      var output = "";


      if (human_override) {
        output = human_unicode+" "+action_to_unicode(rnn_action);
      } else {
        output = robot_unicode+" "+action_to_unicode(rnn_action);
      }
      p.text(output, 10, screen_y-15);
    }

    function active_screen() {
      var result = false;
      var app_top = origy;
      var app_bottom = origy+screen_y;
      if ((app_top >= scroll_top) && (app_top <= (scroll_top+screen_height))) {
        result = true;
      }
      if ((app_bottom >= scroll_top) && (app_bottom <= (scroll_top+screen_height))) {
        result = true;
      }
      /* // debug
      if (slider_mode) {
        console.log("scroll_top="+scroll_top+", scroll_bottom="+scroll_bottom+", app_top="+app_top+", app_bottom="+app_bottom);
        console.log(rect = window.document.getElementById(div_name).getBoundingClientRect());
      }
      */
      return result;
    }

    p.draw = function() {
      if (slider_mode) {
        if ((p.frameCount) % 30 == 0) {
          first_frame = true;
        }
      }
      if (first_frame) {
        first_frame = false;
        reset_screen();
      }
      if (active_screen()) {
        game_loop();
      }
    }

    function game_loop() {
      human_action = 0;
      human_override = false;
      if (p.mouseIsPressed && (p.mouseX<=screen_x) && (p.mouseX>=0) && (p.mouseY<=screen_y-20) && (p.mouseY>=0)) {
        if (p.mouseX <= screen_x/2 - 0*screen_x/10) {
          human_action = -1;
        } else if (p.mouseX >= screen_x/2 + 0*screen_x/10) {
          human_action = 1;
        }
        human_override = true;
      } else {

        if (contKeyMap[key_left] && contKeyMap[key_right]) {
          human_action = 0;
          human_override = true;
        } else if (contKeyMap[key_left]) {
          human_action = -1;
          human_override = true;
        } else if (contKeyMap[key_right]) {
          human_action = 1;
          human_override = true;
        }

      }

      if (human_override) {
        rnn_action = human_action;
      }

      score += 1

      rnn_next_state = DoomRNN.rnn_forward(rnn_z, rnn_action, rnn_restart, rnn_c, rnn_h, temperature);

      rnn_z = rnn_next_state[0];
      rnn_c = rnn_next_state[1];
      rnn_h = rnn_next_state[2];
      rnn_logrestart = rnn_next_state[3][0];

      // update screen
      draw_image();

      // update text
      update_descriptions();

      if (human_override) {
        //show something that shows human is overriding.
      }

      if (rnn_logrestart > 0) {
        restart_game_state();
      } else {
        rnn_restart = 0;
        rnn_action = DoomRNN.get_action(rnn_z, rnn_c, rnn_h, agent_brain);
      }
    }
  };
  return doomrnn_sketch;
}
